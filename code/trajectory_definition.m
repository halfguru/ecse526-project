% This file contains the trajectories used for training of the neural network

% iTrajSelection = 1:17;
if ~exist('iTrajSelection','var')
    iTrajSelection = [1,2,6,8,9,14,16];
end

%% Trajectory 1 - zDesired - zInitial = -90 m

iTraj = 1;
nPoints = 1000;
trajectoryType = 'Linear';
ts      = 0;   % Start time (s)
qs      = -90; % Start position (m)
tf      = 15;  % Finish time (s)
qf      = -90; % Finish position (m)
[zDesiredTime, zDesired]  = trajectory_generation(nPoints, trajectoryType, ...
    ts, qs, tf, qf);
EvalFunParameters.Trajectory(iTraj).XDesired.t          = zDesiredTime;
EvalFunParameters.Trajectory(iTraj).XDesired.val        = zeros(1,nPoints);
EvalFunParameters.Trajectory(iTraj).XDesired.tol        = [-30,+30]*MM_2_M;
EvalFunParameters.Trajectory(iTraj).YDesired.t          = zDesiredTime;
EvalFunParameters.Trajectory(iTraj).YDesired.val        = zeros(1,nPoints);
EvalFunParameters.Trajectory(iTraj).YDesired.tol        = [-30,+30]*MM_2_M;
EvalFunParameters.Trajectory(iTraj).ZDesired.t          = zDesiredTime;
EvalFunParameters.Trajectory(iTraj).ZDesired.val        = zDesired;
EvalFunParameters.Trajectory(iTraj).ZDesired.tol        = [-30,+30]*MM_2_M;
EvalFunParameters.Trajectory(iTraj).PsiDesired.t        = zDesiredTime;
EvalFunParameters.Trajectory(iTraj).PsiDesired.val      = zeros(1,nPoints);
EvalFunParameters.Trajectory(iTraj).PsiDesired.tol      = [-3.5,+3.5]*DEG_2_RAD;
EvalFunParameters.Trajectory(iTraj).ThetaDesired.t      = zDesiredTime;
EvalFunParameters.Trajectory(iTraj).ThetaDesired.val    = zeros(1,nPoints);
EvalFunParameters.Trajectory(iTraj).ThetaDesired.tol    = [-3.5,+3.5]*DEG_2_RAD;
EvalFunParameters.Trajectory(iTraj).PhiDesired.t        = zDesiredTime;
EvalFunParameters.Trajectory(iTraj).PhiDesired.val      = zeros(1,nPoints);
EvalFunParameters.Trajectory(iTraj).PhiDesired.tol      = [-3.5,+3.5]*DEG_2_RAD;
EvalFunParameters.Trajectory(iTraj).IniCond.omegaInitial    = 0*ones(4,1);
EvalFunParameters.Trajectory(iTraj).IniCond.omegaDelay      = zeros(4,1);
EvalFunParameters.Trajectory(iTraj).IniCond.iaInitial       = zeros(4,1);
EvalFunParameters.Trajectory(iTraj).IniCond.iaDelay         = zeros(4,1);
EvalFunParameters.Trajectory(iTraj).IniCond.vPtInitial      = zeros(3,1);
EvalFunParameters.Trajectory(iTraj).IniCond.vPtDelay        = zeros(3,1);
EvalFunParameters.Trajectory(iTraj).IniCond.xPInitial       = [0;0;-90];
EvalFunParameters.Trajectory(iTraj).IniCond.xPDelay         = zeros(3,1);
EvalFunParameters.Trajectory(iTraj).IniCond.omegabtInitial  = zeros(3,1);
EvalFunParameters.Trajectory(iTraj).IniCond.omegabtDelay    = zeros(3,1);
EvalFunParameters.Trajectory(iTraj).IniCond.eulerZYXInitial = zeros(3,1);
EvalFunParameters.Trajectory(iTraj).IniCond.eulerZYXDelay   = zeros(3,1);
EvalFunParameters.Trajectory(iTraj).maxViolationX           = 1.5; % 300
EvalFunParameters.Trajectory(iTraj).maxViolationY           = 1.5; % 300
EvalFunParameters.Trajectory(iTraj).maxViolationZ           = 2; % 300
EvalFunParameters.Trajectory(iTraj).maxViolationPsi         = 0.3; % 150
EvalFunParameters.Trajectory(iTraj).maxViolationTheta       = 0.3; % 150
EvalFunParameters.Trajectory(iTraj).maxViolationPhi         = 0.3; % 150
EvalFunParameters.Trajectory(iTraj).violationFactorX        = 3;
EvalFunParameters.Trajectory(iTraj).violationFactorY        = 3;
EvalFunParameters.Trajectory(iTraj).violationFactorZ        = 5;
EvalFunParameters.Trajectory(iTraj).violationFactorPsi      = 2;
EvalFunParameters.Trajectory(iTraj).violationFactorTheta    = 2;
EvalFunParameters.Trajectory(iTraj).violationFactorPhi      = 2;
EvalFunParameters.Trajectory(iTraj).violationTimeThresholdX = 1.0;
EvalFunParameters.Trajectory(iTraj).violationTimeThresholdY = 1.0;
EvalFunParameters.Trajectory(iTraj).violationTimeThresholdZ = 5.0;
EvalFunParameters.Trajectory(iTraj).violationTimeThresholdPsi   = 0.25;
EvalFunParameters.Trajectory(iTraj).violationTimeThresholdTheta = 0.25;
EvalFunParameters.Trajectory(iTraj).violationTimeThresholdPhi   = 0.25;

%% Trajectory 2 - zDesired - zInitial = -50 m

iTraj = 2;
nPoints = 1000;
trajectoryType = 'Linear';
ts      = 0;    % Start time (s)
qs      = -50;   % Start position (m)
tf      = 15;  % Finish time (s)
qf      = -50;   % Finish position (m)
[zDesiredTime, zDesired]  = trajectory_generation(nPoints, trajectoryType, ...
    ts, qs, tf, qf);
EvalFunParameters.Trajectory(iTraj).XDesired.t          = zDesiredTime;
EvalFunParameters.Trajectory(iTraj).XDesired.val        = zeros(1,nPoints);
EvalFunParameters.Trajectory(iTraj).XDesired.tol        = [-30,+30]*MM_2_M;
EvalFunParameters.Trajectory(iTraj).YDesired.t          = zDesiredTime;
EvalFunParameters.Trajectory(iTraj).YDesired.val        = zeros(1,nPoints);
EvalFunParameters.Trajectory(iTraj).YDesired.tol        = [-30,+30]*MM_2_M;
EvalFunParameters.Trajectory(iTraj).ZDesired.t          = zDesiredTime;
EvalFunParameters.Trajectory(iTraj).ZDesired.val        = zDesired;
EvalFunParameters.Trajectory(iTraj).ZDesired.tol        = [-30,+30]*MM_2_M;
EvalFunParameters.Trajectory(iTraj).PsiDesired.t        = zDesiredTime;
EvalFunParameters.Trajectory(iTraj).PsiDesired.val      = zeros(1,nPoints);
EvalFunParameters.Trajectory(iTraj).PsiDesired.tol      = [-3.5,+3.5]*DEG_2_RAD;
EvalFunParameters.Trajectory(iTraj).ThetaDesired.t      = zDesiredTime;
EvalFunParameters.Trajectory(iTraj).ThetaDesired.val    = zeros(1,nPoints);
EvalFunParameters.Trajectory(iTraj).ThetaDesired.tol    = [-3.5,+3.5]*DEG_2_RAD;
EvalFunParameters.Trajectory(iTraj).PhiDesired.t        = zDesiredTime;
EvalFunParameters.Trajectory(iTraj).PhiDesired.val      = zeros(1,nPoints);
EvalFunParameters.Trajectory(iTraj).PhiDesired.tol      = [-3.5,+3.5]*DEG_2_RAD;
EvalFunParameters.Trajectory(iTraj).IniCond.omegaInitial    = 0*ones(4,1);
EvalFunParameters.Trajectory(iTraj).IniCond.omegaDelay      = zeros(4,1);
EvalFunParameters.Trajectory(iTraj).IniCond.iaInitial       = zeros(4,1);
EvalFunParameters.Trajectory(iTraj).IniCond.iaDelay         = zeros(4,1);
EvalFunParameters.Trajectory(iTraj).IniCond.vPtInitial      = zeros(3,1);
EvalFunParameters.Trajectory(iTraj).IniCond.vPtDelay        = zeros(3,1);
EvalFunParameters.Trajectory(iTraj).IniCond.xPInitial       = [0;0;-50];
EvalFunParameters.Trajectory(iTraj).IniCond.xPDelay         = zeros(3,1);
EvalFunParameters.Trajectory(iTraj).IniCond.omegabtInitial  = zeros(3,1);
EvalFunParameters.Trajectory(iTraj).IniCond.omegabtDelay    = zeros(3,1);
EvalFunParameters.Trajectory(iTraj).IniCond.eulerZYXInitial = zeros(3,1);
EvalFunParameters.Trajectory(iTraj).IniCond.eulerZYXDelay   = zeros(3,1);
EvalFunParameters.Trajectory(iTraj).maxViolationX           = 1.5;
EvalFunParameters.Trajectory(iTraj).maxViolationY           = 1.5;
EvalFunParameters.Trajectory(iTraj).maxViolationZ           = 2;
EvalFunParameters.Trajectory(iTraj).maxViolationPsi         = 0.3;
EvalFunParameters.Trajectory(iTraj).maxViolationTheta       = 0.3;
EvalFunParameters.Trajectory(iTraj).maxViolationPhi         = 0.3;
EvalFunParameters.Trajectory(iTraj).violationFactorX        = 3;
EvalFunParameters.Trajectory(iTraj).violationFactorY        = 3;
EvalFunParameters.Trajectory(iTraj).violationFactorZ        = 5;
EvalFunParameters.Trajectory(iTraj).violationFactorPsi      = 2;
EvalFunParameters.Trajectory(iTraj).violationFactorTheta    = 2;
EvalFunParameters.Trajectory(iTraj).violationFactorPhi      = 2;
EvalFunParameters.Trajectory(iTraj).violationTimeThresholdX = 1.0;
EvalFunParameters.Trajectory(iTraj).violationTimeThresholdY = 1.0;
EvalFunParameters.Trajectory(iTraj).violationTimeThresholdZ = 5.0;
EvalFunParameters.Trajectory(iTraj).violationTimeThresholdPsi   = 0.25;
EvalFunParameters.Trajectory(iTraj).violationTimeThresholdTheta = 0.25;
EvalFunParameters.Trajectory(iTraj).violationTimeThresholdPhi   = 0.25;

%% Trajectory 3 - zDesired - zInitial = -25 m

iTraj = 3;
nPoints = 1000;
trajectoryType = 'Linear';
ts      = 0;    % Start time (s)
qs      = -25;   % Start position (m)
tf      = 15;  % Finish time (s)
qf      = -25;   % Finish position (m)
[zDesiredTime, zDesired]  = trajectory_generation(nPoints, trajectoryType, ...
    ts, qs, tf, qf);
EvalFunParameters.Trajectory(iTraj).XDesired.t          = zDesiredTime;
EvalFunParameters.Trajectory(iTraj).XDesired.val        = zeros(1,nPoints);
EvalFunParameters.Trajectory(iTraj).XDesired.tol        = [-30,+30]*MM_2_M;
EvalFunParameters.Trajectory(iTraj).YDesired.t          = zDesiredTime;
EvalFunParameters.Trajectory(iTraj).YDesired.val        = zeros(1,nPoints);
EvalFunParameters.Trajectory(iTraj).YDesired.tol        = [-30,+30]*MM_2_M;
EvalFunParameters.Trajectory(iTraj).ZDesired.t          = zDesiredTime;
EvalFunParameters.Trajectory(iTraj).ZDesired.val        = zDesired;
EvalFunParameters.Trajectory(iTraj).ZDesired.tol        = [-30,+30]*MM_2_M;
EvalFunParameters.Trajectory(iTraj).PsiDesired.t        = zDesiredTime;
EvalFunParameters.Trajectory(iTraj).PsiDesired.val      = zeros(1,nPoints);
EvalFunParameters.Trajectory(iTraj).PsiDesired.tol      = [-3.5,+3.5]*DEG_2_RAD;
EvalFunParameters.Trajectory(iTraj).ThetaDesired.t      = zDesiredTime;
EvalFunParameters.Trajectory(iTraj).ThetaDesired.val    = zeros(1,nPoints);
EvalFunParameters.Trajectory(iTraj).ThetaDesired.tol    = [-3.5,+3.5]*DEG_2_RAD;
EvalFunParameters.Trajectory(iTraj).PhiDesired.t        = zDesiredTime;
EvalFunParameters.Trajectory(iTraj).PhiDesired.val      = zeros(1,nPoints);
EvalFunParameters.Trajectory(iTraj).PhiDesired.tol      = [-3.5,+3.5]*DEG_2_RAD;
EvalFunParameters.Trajectory(iTraj).IniCond.omegaInitial    = 0*ones(4,1);
EvalFunParameters.Trajectory(iTraj).IniCond.omegaDelay      = zeros(4,1);
EvalFunParameters.Trajectory(iTraj).IniCond.iaInitial       = zeros(4,1);
EvalFunParameters.Trajectory(iTraj).IniCond.iaDelay         = zeros(4,1);
EvalFunParameters.Trajectory(iTraj).IniCond.vPtInitial      = zeros(3,1);
EvalFunParameters.Trajectory(iTraj).IniCond.vPtDelay        = zeros(3,1);
EvalFunParameters.Trajectory(iTraj).IniCond.xPInitial       = [0;0;-25];
EvalFunParameters.Trajectory(iTraj).IniCond.xPDelay         = zeros(3,1);
EvalFunParameters.Trajectory(iTraj).IniCond.omegabtInitial  = zeros(3,1);
EvalFunParameters.Trajectory(iTraj).IniCond.omegabtDelay    = zeros(3,1);
EvalFunParameters.Trajectory(iTraj).IniCond.eulerZYXInitial = zeros(3,1);
EvalFunParameters.Trajectory(iTraj).IniCond.eulerZYXDelay   = zeros(3,1);
EvalFunParameters.Trajectory(iTraj).maxViolationX           = 1.5;
EvalFunParameters.Trajectory(iTraj).maxViolationY           = 1.5;
EvalFunParameters.Trajectory(iTraj).maxViolationZ           = 2;
EvalFunParameters.Trajectory(iTraj).maxViolationPsi         = 0.3;
EvalFunParameters.Trajectory(iTraj).maxViolationTheta       = 0.3;
EvalFunParameters.Trajectory(iTraj).maxViolationPhi         = 0.3;
EvalFunParameters.Trajectory(iTraj).violationFactorX        = 3;
EvalFunParameters.Trajectory(iTraj).violationFactorY        = 3;
EvalFunParameters.Trajectory(iTraj).violationFactorZ        = 5;
EvalFunParameters.Trajectory(iTraj).violationFactorPsi      = 2;
EvalFunParameters.Trajectory(iTraj).violationFactorTheta    = 2;
EvalFunParameters.Trajectory(iTraj).violationFactorPhi      = 2;
EvalFunParameters.Trajectory(iTraj).violationTimeThresholdX = 1.0;
EvalFunParameters.Trajectory(iTraj).violationTimeThresholdY = 1.0;
EvalFunParameters.Trajectory(iTraj).violationTimeThresholdZ = 5.0;
EvalFunParameters.Trajectory(iTraj).violationTimeThresholdPsi   = 0.25;
EvalFunParameters.Trajectory(iTraj).violationTimeThresholdTheta = 0.25;
EvalFunParameters.Trajectory(iTraj).violationTimeThresholdPhi   = 0.25;

%% Trajectory 4 - zDesired - zInitial = 0 m

iTraj = 4;
nPoints = 1000;
trajectoryType = 'Linear';
ts      = 0;   % Start time (s)
qs      = 0;   % Start position (m)
tf      = 15;  % Finish time (s)
qf      = 0;   % Finish position (m)
[zDesiredTime, zDesired]  = trajectory_generation(nPoints, trajectoryType, ...
    ts, qs, tf, qf);
EvalFunParameters.Trajectory(iTraj).XDesired.t          = zDesiredTime;
EvalFunParameters.Trajectory(iTraj).XDesired.val        = zeros(1,nPoints);
EvalFunParameters.Trajectory(iTraj).XDesired.tol        = [-30,+30]*MM_2_M;
EvalFunParameters.Trajectory(iTraj).YDesired.t          = zDesiredTime;
EvalFunParameters.Trajectory(iTraj).YDesired.val        = zeros(1,nPoints);
EvalFunParameters.Trajectory(iTraj).YDesired.tol        = [-30,+30]*MM_2_M;
EvalFunParameters.Trajectory(iTraj).ZDesired.t          = zDesiredTime;
EvalFunParameters.Trajectory(iTraj).ZDesired.val        = zDesired;
EvalFunParameters.Trajectory(iTraj).ZDesired.tol        = [-30,+30]*MM_2_M;
EvalFunParameters.Trajectory(iTraj).PsiDesired.t        = zDesiredTime;
EvalFunParameters.Trajectory(iTraj).PsiDesired.val      = zeros(1,nPoints);
EvalFunParameters.Trajectory(iTraj).PsiDesired.tol      = [-3.5,+3.5]*DEG_2_RAD;
EvalFunParameters.Trajectory(iTraj).ThetaDesired.t      = zDesiredTime;
EvalFunParameters.Trajectory(iTraj).ThetaDesired.val    = zeros(1,nPoints);
EvalFunParameters.Trajectory(iTraj).ThetaDesired.tol    = [-3.5,+3.5]*DEG_2_RAD;
EvalFunParameters.Trajectory(iTraj).PhiDesired.t        = zDesiredTime;
EvalFunParameters.Trajectory(iTraj).PhiDesired.val      = zeros(1,nPoints);
EvalFunParameters.Trajectory(iTraj).PhiDesired.tol      = [-3.5,+3.5]*DEG_2_RAD;
EvalFunParameters.Trajectory(iTraj).IniCond.omegaInitial    = 0*ones(4,1);
EvalFunParameters.Trajectory(iTraj).IniCond.omegaDelay      = zeros(4,1);
EvalFunParameters.Trajectory(iTraj).IniCond.iaInitial       = zeros(4,1);
EvalFunParameters.Trajectory(iTraj).IniCond.iaDelay         = zeros(4,1);
EvalFunParameters.Trajectory(iTraj).IniCond.vPtInitial      = zeros(3,1);
EvalFunParameters.Trajectory(iTraj).IniCond.vPtDelay        = zeros(3,1);
EvalFunParameters.Trajectory(iTraj).IniCond.xPInitial       = [0;0;0];
EvalFunParameters.Trajectory(iTraj).IniCond.xPDelay         = zeros(3,1);
EvalFunParameters.Trajectory(iTraj).IniCond.omegabtInitial  = zeros(3,1);
EvalFunParameters.Trajectory(iTraj).IniCond.omegabtDelay    = zeros(3,1);
EvalFunParameters.Trajectory(iTraj).IniCond.eulerZYXInitial = zeros(3,1);
EvalFunParameters.Trajectory(iTraj).IniCond.eulerZYXDelay   = zeros(3,1);
EvalFunParameters.Trajectory(iTraj).maxViolationX           = 1.5;
EvalFunParameters.Trajectory(iTraj).maxViolationY           = 1.5;
EvalFunParameters.Trajectory(iTraj).maxViolationZ           = 2;
EvalFunParameters.Trajectory(iTraj).maxViolationPsi         = 0.3;
EvalFunParameters.Trajectory(iTraj).maxViolationTheta       = 0.3;
EvalFunParameters.Trajectory(iTraj).maxViolationPhi         = 0.3;
EvalFunParameters.Trajectory(iTraj).violationFactorX        = 3;
EvalFunParameters.Trajectory(iTraj).violationFactorY        = 3;
EvalFunParameters.Trajectory(iTraj).violationFactorZ        = 5;
EvalFunParameters.Trajectory(iTraj).violationFactorPsi      = 2;
EvalFunParameters.Trajectory(iTraj).violationFactorTheta    = 2;
EvalFunParameters.Trajectory(iTraj).violationFactorPhi      = 2;
EvalFunParameters.Trajectory(iTraj).violationTimeThresholdX = 1.0;
EvalFunParameters.Trajectory(iTraj).violationTimeThresholdY = 1.0;
EvalFunParameters.Trajectory(iTraj).violationTimeThresholdZ = 5.0;
EvalFunParameters.Trajectory(iTraj).violationTimeThresholdPsi   = 0.25;
EvalFunParameters.Trajectory(iTraj).violationTimeThresholdTheta = 0.25;
EvalFunParameters.Trajectory(iTraj).violationTimeThresholdPhi   = 0.25;

%% Trajectory 5 - zDesired - zInitial = 25 m

iTraj = 5;
nPoints = 1000;
trajectoryType = 'Linear';
ts      = 0;    % Start time (s)
qs      = 25;   % Start position (m)
tf      = 15;   % Finish time (s)
qf      = 25;   % Finish position (m)
[zDesiredTime, zDesired]  = trajectory_generation(nPoints, trajectoryType, ...
    ts, qs, tf, qf);
EvalFunParameters.Trajectory(iTraj).XDesired.t          = zDesiredTime;
EvalFunParameters.Trajectory(iTraj).XDesired.val        = zeros(1,nPoints);
EvalFunParameters.Trajectory(iTraj).XDesired.tol        = [-30,+30]*MM_2_M;
EvalFunParameters.Trajectory(iTraj).YDesired.t          = zDesiredTime;
EvalFunParameters.Trajectory(iTraj).YDesired.val        = zeros(1,nPoints);
EvalFunParameters.Trajectory(iTraj).YDesired.tol        = [-30,+30]*MM_2_M;
EvalFunParameters.Trajectory(iTraj).ZDesired.t          = zDesiredTime;
EvalFunParameters.Trajectory(iTraj).ZDesired.val        = zDesired;
EvalFunParameters.Trajectory(iTraj).ZDesired.tol        = [-30,+30]*MM_2_M;
EvalFunParameters.Trajectory(iTraj).PsiDesired.t        = zDesiredTime;
EvalFunParameters.Trajectory(iTraj).PsiDesired.val      = zeros(1,nPoints);
EvalFunParameters.Trajectory(iTraj).PsiDesired.tol      = [-3.5,+3.5]*DEG_2_RAD;
EvalFunParameters.Trajectory(iTraj).ThetaDesired.t      = zDesiredTime;
EvalFunParameters.Trajectory(iTraj).ThetaDesired.val    = zeros(1,nPoints);
EvalFunParameters.Trajectory(iTraj).ThetaDesired.tol    = [-3.5,+3.5]*DEG_2_RAD;
EvalFunParameters.Trajectory(iTraj).PhiDesired.t        = zDesiredTime;
EvalFunParameters.Trajectory(iTraj).PhiDesired.val      = zeros(1,nPoints);
EvalFunParameters.Trajectory(iTraj).PhiDesired.tol      = [-3.5,+3.5]*DEG_2_RAD;
EvalFunParameters.Trajectory(iTraj).IniCond.omegaInitial    = 0*ones(4,1);
EvalFunParameters.Trajectory(iTraj).IniCond.omegaDelay      = zeros(4,1);
EvalFunParameters.Trajectory(iTraj).IniCond.iaInitial       = zeros(4,1);
EvalFunParameters.Trajectory(iTraj).IniCond.iaDelay         = zeros(4,1);
EvalFunParameters.Trajectory(iTraj).IniCond.vPtInitial      = zeros(3,1);
EvalFunParameters.Trajectory(iTraj).IniCond.vPtDelay        = zeros(3,1);
EvalFunParameters.Trajectory(iTraj).IniCond.xPInitial       = [0;0;25];
EvalFunParameters.Trajectory(iTraj).IniCond.xPDelay         = zeros(3,1);
EvalFunParameters.Trajectory(iTraj).IniCond.omegabtInitial  = zeros(3,1);
EvalFunParameters.Trajectory(iTraj).IniCond.omegabtDelay    = zeros(3,1);
EvalFunParameters.Trajectory(iTraj).IniCond.eulerZYXInitial = zeros(3,1);
EvalFunParameters.Trajectory(iTraj).IniCond.eulerZYXDelay   = zeros(3,1);
EvalFunParameters.Trajectory(iTraj).maxViolationX           = 1.5;
EvalFunParameters.Trajectory(iTraj).maxViolationY           = 1.5;
EvalFunParameters.Trajectory(iTraj).maxViolationZ           = 2;
EvalFunParameters.Trajectory(iTraj).maxViolationPsi         = 0.3;
EvalFunParameters.Trajectory(iTraj).maxViolationTheta       = 0.3;
EvalFunParameters.Trajectory(iTraj).maxViolationPhi         = 0.3;
EvalFunParameters.Trajectory(iTraj).violationFactorX        = 3;
EvalFunParameters.Trajectory(iTraj).violationFactorY        = 3;
EvalFunParameters.Trajectory(iTraj).violationFactorZ        = 5;
EvalFunParameters.Trajectory(iTraj).violationFactorPsi      = 2;
EvalFunParameters.Trajectory(iTraj).violationFactorTheta    = 2;
EvalFunParameters.Trajectory(iTraj).violationFactorPhi      = 2;
EvalFunParameters.Trajectory(iTraj).violationTimeThresholdX = 1.0;
EvalFunParameters.Trajectory(iTraj).violationTimeThresholdY = 1.0;
EvalFunParameters.Trajectory(iTraj).violationTimeThresholdZ = 5.0;
EvalFunParameters.Trajectory(iTraj).violationTimeThresholdPsi   = 0.25;
EvalFunParameters.Trajectory(iTraj).violationTimeThresholdTheta = 0.25;
EvalFunParameters.Trajectory(iTraj).violationTimeThresholdPhi   = 0.25;

%% Trajectory 6 - zDesired - zInitial = 50 m

iTraj = 6;
nPoints = 1000;
trajectoryType = 'Linear';
ts      = 0;    % Start time (s)
qs      = 50;   % Start position (m)
tf      = 15;  % Finish time (s)
qf      = 50;   % Finish position (m)
[zDesiredTime, zDesired]  = trajectory_generation(nPoints, trajectoryType, ...
    ts, qs, tf, qf);
EvalFunParameters.Trajectory(iTraj).XDesired.t          = zDesiredTime;
EvalFunParameters.Trajectory(iTraj).XDesired.val        = zeros(1,nPoints);
EvalFunParameters.Trajectory(iTraj).XDesired.tol        = [-30,+30]*MM_2_M;
EvalFunParameters.Trajectory(iTraj).YDesired.t          = zDesiredTime;
EvalFunParameters.Trajectory(iTraj).YDesired.val        = zeros(1,nPoints);
EvalFunParameters.Trajectory(iTraj).YDesired.tol        = [-30,+30]*MM_2_M;
EvalFunParameters.Trajectory(iTraj).ZDesired.t          = zDesiredTime;
EvalFunParameters.Trajectory(iTraj).ZDesired.val        = zDesired;
EvalFunParameters.Trajectory(iTraj).ZDesired.tol        = [-30,+30]*MM_2_M;
EvalFunParameters.Trajectory(iTraj).PsiDesired.t        = zDesiredTime;
EvalFunParameters.Trajectory(iTraj).PsiDesired.val      = zeros(1,nPoints);
EvalFunParameters.Trajectory(iTraj).PsiDesired.tol      = [-3.5,+3.5]*DEG_2_RAD;
EvalFunParameters.Trajectory(iTraj).ThetaDesired.t      = zDesiredTime;
EvalFunParameters.Trajectory(iTraj).ThetaDesired.val    = zeros(1,nPoints);
EvalFunParameters.Trajectory(iTraj).ThetaDesired.tol    = [-3.5,+3.5]*DEG_2_RAD;
EvalFunParameters.Trajectory(iTraj).PhiDesired.t        = zDesiredTime;
EvalFunParameters.Trajectory(iTraj).PhiDesired.val      = zeros(1,nPoints);
EvalFunParameters.Trajectory(iTraj).PhiDesired.tol      = [-3.5,+3.5]*DEG_2_RAD;
EvalFunParameters.Trajectory(iTraj).IniCond.omegaInitial    = 0*ones(4,1);
EvalFunParameters.Trajectory(iTraj).IniCond.omegaDelay      = zeros(4,1);
EvalFunParameters.Trajectory(iTraj).IniCond.iaInitial       = zeros(4,1);
EvalFunParameters.Trajectory(iTraj).IniCond.iaDelay         = zeros(4,1);
EvalFunParameters.Trajectory(iTraj).IniCond.vPtInitial      = zeros(3,1);
EvalFunParameters.Trajectory(iTraj).IniCond.vPtDelay        = zeros(3,1);
EvalFunParameters.Trajectory(iTraj).IniCond.xPInitial       = [0;0;50];
EvalFunParameters.Trajectory(iTraj).IniCond.xPDelay         = zeros(3,1);
EvalFunParameters.Trajectory(iTraj).IniCond.omegabtInitial  = zeros(3,1);
EvalFunParameters.Trajectory(iTraj).IniCond.omegabtDelay    = zeros(3,1);
EvalFunParameters.Trajectory(iTraj).IniCond.eulerZYXInitial = zeros(3,1);
EvalFunParameters.Trajectory(iTraj).IniCond.eulerZYXDelay   = zeros(3,1);
EvalFunParameters.Trajectory(iTraj).maxViolationX           = 1.5;
EvalFunParameters.Trajectory(iTraj).maxViolationY           = 1.5;
EvalFunParameters.Trajectory(iTraj).maxViolationZ           = 2;
EvalFunParameters.Trajectory(iTraj).maxViolationPsi         = 0.3;
EvalFunParameters.Trajectory(iTraj).maxViolationTheta       = 0.3;
EvalFunParameters.Trajectory(iTraj).maxViolationPhi         = 0.3;
EvalFunParameters.Trajectory(iTraj).violationFactorX        = 3;
EvalFunParameters.Trajectory(iTraj).violationFactorY        = 3;
EvalFunParameters.Trajectory(iTraj).violationFactorZ        = 5;
EvalFunParameters.Trajectory(iTraj).violationFactorPsi      = 2;
EvalFunParameters.Trajectory(iTraj).violationFactorTheta    = 2;
EvalFunParameters.Trajectory(iTraj).violationFactorPhi      = 2;
EvalFunParameters.Trajectory(iTraj).violationTimeThresholdX = 1.0;
EvalFunParameters.Trajectory(iTraj).violationTimeThresholdY = 1.0;
EvalFunParameters.Trajectory(iTraj).violationTimeThresholdZ = 5.0;
EvalFunParameters.Trajectory(iTraj).violationTimeThresholdPsi   = 0.25;
EvalFunParameters.Trajectory(iTraj).violationTimeThresholdTheta = 0.25;
EvalFunParameters.Trajectory(iTraj).violationTimeThresholdPhi   = 0.25;

%% Trajectory 7 - zDesired - zInitial = 90 m

iTraj = 7;
nPoints = 1000;
trajectoryType = 'Linear';
ts      = 0;    % Start time (s)
qs      = 90;   % Start position (m)
tf      = 15;  % Finish time (s)
qf      = 90;   % Finish position (m)
[zDesiredTime, zDesired]  = trajectory_generation(nPoints, trajectoryType, ...
    ts, qs, tf, qf);
EvalFunParameters.Trajectory(iTraj).XDesired.t          = zDesiredTime;
EvalFunParameters.Trajectory(iTraj).XDesired.val        = zeros(1,nPoints);
EvalFunParameters.Trajectory(iTraj).XDesired.tol        = [-30,+30]*MM_2_M;
EvalFunParameters.Trajectory(iTraj).YDesired.t          = zDesiredTime;
EvalFunParameters.Trajectory(iTraj).YDesired.val        = zeros(1,nPoints);
EvalFunParameters.Trajectory(iTraj).YDesired.tol        = [-30,+30]*MM_2_M;
EvalFunParameters.Trajectory(iTraj).ZDesired.t          = zDesiredTime;
EvalFunParameters.Trajectory(iTraj).ZDesired.val        = zDesired;
EvalFunParameters.Trajectory(iTraj).ZDesired.tol        = [-30,+30]*MM_2_M;
EvalFunParameters.Trajectory(iTraj).PsiDesired.t        = zDesiredTime;
EvalFunParameters.Trajectory(iTraj).PsiDesired.val      = zeros(1,nPoints);
EvalFunParameters.Trajectory(iTraj).PsiDesired.tol      = [-3.5,+3.5]*DEG_2_RAD;
EvalFunParameters.Trajectory(iTraj).ThetaDesired.t      = zDesiredTime;
EvalFunParameters.Trajectory(iTraj).ThetaDesired.val    = zeros(1,nPoints);
EvalFunParameters.Trajectory(iTraj).ThetaDesired.tol    = [-3.5,+3.5]*DEG_2_RAD;
EvalFunParameters.Trajectory(iTraj).PhiDesired.t        = zDesiredTime;
EvalFunParameters.Trajectory(iTraj).PhiDesired.val      = zeros(1,nPoints);
EvalFunParameters.Trajectory(iTraj).PhiDesired.tol      = [-3.5,+3.5]*DEG_2_RAD;
EvalFunParameters.Trajectory(iTraj).IniCond.omegaInitial    = 0*ones(4,1);
EvalFunParameters.Trajectory(iTraj).IniCond.omegaDelay      = zeros(4,1);
EvalFunParameters.Trajectory(iTraj).IniCond.iaInitial       = zeros(4,1);
EvalFunParameters.Trajectory(iTraj).IniCond.iaDelay         = zeros(4,1);
EvalFunParameters.Trajectory(iTraj).IniCond.vPtInitial      = zeros(3,1);
EvalFunParameters.Trajectory(iTraj).IniCond.vPtDelay        = zeros(3,1);
EvalFunParameters.Trajectory(iTraj).IniCond.xPInitial       = [0;0;90];
EvalFunParameters.Trajectory(iTraj).IniCond.xPDelay         = zeros(3,1);
EvalFunParameters.Trajectory(iTraj).IniCond.omegabtInitial  = zeros(3,1);
EvalFunParameters.Trajectory(iTraj).IniCond.omegabtDelay    = zeros(3,1);
EvalFunParameters.Trajectory(iTraj).IniCond.eulerZYXInitial = zeros(3,1);
EvalFunParameters.Trajectory(iTraj).IniCond.eulerZYXDelay   = zeros(3,1);
EvalFunParameters.Trajectory(iTraj).maxViolationX           = 1.5;
EvalFunParameters.Trajectory(iTraj).maxViolationY           = 1.5;
EvalFunParameters.Trajectory(iTraj).maxViolationZ           = 2;
EvalFunParameters.Trajectory(iTraj).maxViolationPsi         = 0.3;
EvalFunParameters.Trajectory(iTraj).maxViolationTheta       = 0.3;
EvalFunParameters.Trajectory(iTraj).maxViolationPhi         = 0.3;
EvalFunParameters.Trajectory(iTraj).violationFactorX        = 3;
EvalFunParameters.Trajectory(iTraj).violationFactorY        = 3;
EvalFunParameters.Trajectory(iTraj).violationFactorZ        = 5;
EvalFunParameters.Trajectory(iTraj).violationFactorPsi      = 2;
EvalFunParameters.Trajectory(iTraj).violationFactorTheta    = 2;
EvalFunParameters.Trajectory(iTraj).violationFactorPhi      = 2;
EvalFunParameters.Trajectory(iTraj).violationTimeThresholdX = 1.0;
EvalFunParameters.Trajectory(iTraj).violationTimeThresholdY = 1.0;
EvalFunParameters.Trajectory(iTraj).violationTimeThresholdZ = 5.0;
EvalFunParameters.Trajectory(iTraj).violationTimeThresholdPsi   = 0.25;
EvalFunParameters.Trajectory(iTraj).violationTimeThresholdTheta = 0.25;
EvalFunParameters.Trajectory(iTraj).violationTimeThresholdPhi   = 0.25;

%% Trajectory 8 - zDesired - zInitial = 0 m - xInitial = 50 m - yInitial = 50 m

iTraj = 8;
nPoints = 1000;
trajectoryType = 'Linear';
ts      = 0;   % Start time (s)
qs      = 0;   % Start position (m)
tf      = 15;  % Finish time (s)
qf      = 0;   % Finish position (m)
[zDesiredTime, zDesired]  = trajectory_generation(nPoints, trajectoryType, ...
    ts, qs, tf, qf);
EvalFunParameters.Trajectory(iTraj).XDesired.t          = zDesiredTime;
EvalFunParameters.Trajectory(iTraj).XDesired.val        = 50*ones(1,nPoints);
EvalFunParameters.Trajectory(iTraj).XDesired.tol        = [-30,+30]*MM_2_M;
EvalFunParameters.Trajectory(iTraj).YDesired.t          = zDesiredTime;
EvalFunParameters.Trajectory(iTraj).YDesired.val        = 50*ones(1,nPoints);
EvalFunParameters.Trajectory(iTraj).YDesired.tol        = [-30,+30]*MM_2_M;
EvalFunParameters.Trajectory(iTraj).ZDesired.t          = zDesiredTime;
EvalFunParameters.Trajectory(iTraj).ZDesired.val        = zDesired;
EvalFunParameters.Trajectory(iTraj).ZDesired.tol        = [-30,+30]*MM_2_M;
EvalFunParameters.Trajectory(iTraj).PsiDesired.t        = zDesiredTime;
EvalFunParameters.Trajectory(iTraj).PsiDesired.val      = zeros(1,nPoints);
EvalFunParameters.Trajectory(iTraj).PsiDesired.tol      = [-3.5,+3.5]*DEG_2_RAD;
EvalFunParameters.Trajectory(iTraj).ThetaDesired.t      = zDesiredTime;
EvalFunParameters.Trajectory(iTraj).ThetaDesired.val    = zeros(1,nPoints);
EvalFunParameters.Trajectory(iTraj).ThetaDesired.tol    = [-3.5,+3.5]*DEG_2_RAD;
EvalFunParameters.Trajectory(iTraj).PhiDesired.t        = zDesiredTime;
EvalFunParameters.Trajectory(iTraj).PhiDesired.val      = zeros(1,nPoints);
EvalFunParameters.Trajectory(iTraj).PhiDesired.tol      = [-3.5,+3.5]*DEG_2_RAD;
EvalFunParameters.Trajectory(iTraj).IniCond.omegaInitial    = 0*ones(4,1);
EvalFunParameters.Trajectory(iTraj).IniCond.omegaDelay      = zeros(4,1);
EvalFunParameters.Trajectory(iTraj).IniCond.iaInitial       = zeros(4,1);
EvalFunParameters.Trajectory(iTraj).IniCond.iaDelay         = zeros(4,1);
EvalFunParameters.Trajectory(iTraj).IniCond.vPtInitial      = zeros(3,1);
EvalFunParameters.Trajectory(iTraj).IniCond.vPtDelay        = zeros(3,1);
EvalFunParameters.Trajectory(iTraj).IniCond.xPInitial       = [50;50;0];
EvalFunParameters.Trajectory(iTraj).IniCond.xPDelay         = zeros(3,1);
EvalFunParameters.Trajectory(iTraj).IniCond.omegabtInitial  = zeros(3,1);
EvalFunParameters.Trajectory(iTraj).IniCond.omegabtDelay    = zeros(3,1);
EvalFunParameters.Trajectory(iTraj).IniCond.eulerZYXInitial = zeros(3,1);
EvalFunParameters.Trajectory(iTraj).IniCond.eulerZYXDelay   = zeros(3,1);
EvalFunParameters.Trajectory(iTraj).maxViolationX           = 1.5;
EvalFunParameters.Trajectory(iTraj).maxViolationY           = 1.5;
EvalFunParameters.Trajectory(iTraj).maxViolationZ           = 2;
EvalFunParameters.Trajectory(iTraj).maxViolationPsi         = 0.3;
EvalFunParameters.Trajectory(iTraj).maxViolationTheta       = 0.3;
EvalFunParameters.Trajectory(iTraj).maxViolationPhi         = 0.3;
EvalFunParameters.Trajectory(iTraj).violationFactorX        = 3;
EvalFunParameters.Trajectory(iTraj).violationFactorY        = 3;
EvalFunParameters.Trajectory(iTraj).violationFactorZ        = 5;
EvalFunParameters.Trajectory(iTraj).violationFactorPsi      = 2;
EvalFunParameters.Trajectory(iTraj).violationFactorTheta    = 2;
EvalFunParameters.Trajectory(iTraj).violationFactorPhi      = 2;
EvalFunParameters.Trajectory(iTraj).violationTimeThresholdX = 1.0;
EvalFunParameters.Trajectory(iTraj).violationTimeThresholdY = 1.0;
EvalFunParameters.Trajectory(iTraj).violationTimeThresholdZ = 5.0;
EvalFunParameters.Trajectory(iTraj).violationTimeThresholdPsi   = 0.25;
EvalFunParameters.Trajectory(iTraj).violationTimeThresholdTheta = 0.25;
EvalFunParameters.Trajectory(iTraj).violationTimeThresholdPhi   = 0.25;

%% Trajectory 9 - zDesired - zInitial = 0 m - xInitial = -50 m - yInitial = -50 m

iTraj = 9;
nPoints = 1000;
trajectoryType = 'Linear';
ts      = 0;   % Start time (s)
qs      = 0;   % Start position (m)
tf      = 15;  % Finish time (s)
qf      = 0;   % Finish position (m)
[zDesiredTime, zDesired]  = trajectory_generation(nPoints, trajectoryType, ...
    ts, qs, tf, qf);
EvalFunParameters.Trajectory(iTraj).XDesired.t          = zDesiredTime;
EvalFunParameters.Trajectory(iTraj).XDesired.val        = -50*ones(1,nPoints);
EvalFunParameters.Trajectory(iTraj).XDesired.tol        = [-30,+30]*MM_2_M;
EvalFunParameters.Trajectory(iTraj).YDesired.t          = zDesiredTime;
EvalFunParameters.Trajectory(iTraj).YDesired.val        = -50*ones(1,nPoints);
EvalFunParameters.Trajectory(iTraj).YDesired.tol        = [-30,+30]*MM_2_M;
EvalFunParameters.Trajectory(iTraj).ZDesired.t          = zDesiredTime;
EvalFunParameters.Trajectory(iTraj).ZDesired.val        = zDesired;
EvalFunParameters.Trajectory(iTraj).ZDesired.tol        = [-30,+30]*MM_2_M;
EvalFunParameters.Trajectory(iTraj).PsiDesired.t        = zDesiredTime;
EvalFunParameters.Trajectory(iTraj).PsiDesired.val      = zeros(1,nPoints);
EvalFunParameters.Trajectory(iTraj).PsiDesired.tol      = [-3.5,+3.5]*DEG_2_RAD;
EvalFunParameters.Trajectory(iTraj).ThetaDesired.t      = zDesiredTime;
EvalFunParameters.Trajectory(iTraj).ThetaDesired.val    = zeros(1,nPoints);
EvalFunParameters.Trajectory(iTraj).ThetaDesired.tol    = [-3.5,+3.5]*DEG_2_RAD;
EvalFunParameters.Trajectory(iTraj).PhiDesired.t        = zDesiredTime;
EvalFunParameters.Trajectory(iTraj).PhiDesired.val      = zeros(1,nPoints);
EvalFunParameters.Trajectory(iTraj).PhiDesired.tol      = [-3.5,+3.5]*DEG_2_RAD;
EvalFunParameters.Trajectory(iTraj).IniCond.omegaInitial    = 0*ones(4,1);
EvalFunParameters.Trajectory(iTraj).IniCond.omegaDelay      = zeros(4,1);
EvalFunParameters.Trajectory(iTraj).IniCond.iaInitial       = zeros(4,1);
EvalFunParameters.Trajectory(iTraj).IniCond.iaDelay         = zeros(4,1);
EvalFunParameters.Trajectory(iTraj).IniCond.vPtInitial      = zeros(3,1);
EvalFunParameters.Trajectory(iTraj).IniCond.vPtDelay        = zeros(3,1);
EvalFunParameters.Trajectory(iTraj).IniCond.xPInitial       = [-50;-50;0];
EvalFunParameters.Trajectory(iTraj).IniCond.xPDelay         = zeros(3,1);
EvalFunParameters.Trajectory(iTraj).IniCond.omegabtInitial  = zeros(3,1);
EvalFunParameters.Trajectory(iTraj).IniCond.omegabtDelay    = zeros(3,1);
EvalFunParameters.Trajectory(iTraj).IniCond.eulerZYXInitial = zeros(3,1);
EvalFunParameters.Trajectory(iTraj).IniCond.eulerZYXDelay   = zeros(3,1);
EvalFunParameters.Trajectory(iTraj).maxViolationX           = 1.5;
EvalFunParameters.Trajectory(iTraj).maxViolationY           = 1.5;
EvalFunParameters.Trajectory(iTraj).maxViolationZ           = 2;
EvalFunParameters.Trajectory(iTraj).maxViolationPsi         = 0.3;
EvalFunParameters.Trajectory(iTraj).maxViolationTheta       = 0.3;
EvalFunParameters.Trajectory(iTraj).maxViolationPhi         = 0.3;
EvalFunParameters.Trajectory(iTraj).violationFactorX        = 3;
EvalFunParameters.Trajectory(iTraj).violationFactorY        = 3;
EvalFunParameters.Trajectory(iTraj).violationFactorZ        = 5;
EvalFunParameters.Trajectory(iTraj).violationFactorPsi      = 2;
EvalFunParameters.Trajectory(iTraj).violationFactorTheta    = 2;
EvalFunParameters.Trajectory(iTraj).violationFactorPhi      = 2;
EvalFunParameters.Trajectory(iTraj).violationTimeThresholdX = 1.0;
EvalFunParameters.Trajectory(iTraj).violationTimeThresholdY = 1.0;
EvalFunParameters.Trajectory(iTraj).violationTimeThresholdZ = 5.0;
EvalFunParameters.Trajectory(iTraj).violationTimeThresholdPsi   = 0.25;
EvalFunParameters.Trajectory(iTraj).violationTimeThresholdTheta = 0.25;
EvalFunParameters.Trajectory(iTraj).violationTimeThresholdPhi   = 0.25;

%% Trajectory 10 - zDesired - zInitial = 0 m - xInitial = 50 m - yInitial = 0 m

iTraj = 10;
nPoints = 1000;
trajectoryType = 'Linear';
ts      = 0;   % Start time (s)
qs      = 0;   % Start position (m)
tf      = 15;  % Finish time (s)
qf      = 0;   % Finish position (m)
[zDesiredTime, zDesired]  = trajectory_generation(nPoints, trajectoryType, ...
    ts, qs, tf, qf);
EvalFunParameters.Trajectory(iTraj).XDesired.t          = zDesiredTime;
EvalFunParameters.Trajectory(iTraj).XDesired.val        = 50*ones(1,nPoints);
EvalFunParameters.Trajectory(iTraj).XDesired.tol        = [-30,+30]*MM_2_M;
EvalFunParameters.Trajectory(iTraj).YDesired.t          = zDesiredTime;
EvalFunParameters.Trajectory(iTraj).YDesired.val        = 0*ones(1,nPoints);
EvalFunParameters.Trajectory(iTraj).YDesired.tol        = [-30,+30]*MM_2_M;
EvalFunParameters.Trajectory(iTraj).ZDesired.t          = zDesiredTime;
EvalFunParameters.Trajectory(iTraj).ZDesired.val        = zDesired;
EvalFunParameters.Trajectory(iTraj).ZDesired.tol        = [-30,+30]*MM_2_M;
EvalFunParameters.Trajectory(iTraj).PsiDesired.t        = zDesiredTime;
EvalFunParameters.Trajectory(iTraj).PsiDesired.val      = zeros(1,nPoints);
EvalFunParameters.Trajectory(iTraj).PsiDesired.tol      = [-3.5,+3.5]*DEG_2_RAD;
EvalFunParameters.Trajectory(iTraj).ThetaDesired.t      = zDesiredTime;
EvalFunParameters.Trajectory(iTraj).ThetaDesired.val    = zeros(1,nPoints);
EvalFunParameters.Trajectory(iTraj).ThetaDesired.tol    = [-3.5,+3.5]*DEG_2_RAD;
EvalFunParameters.Trajectory(iTraj).PhiDesired.t        = zDesiredTime;
EvalFunParameters.Trajectory(iTraj).PhiDesired.val      = zeros(1,nPoints);
EvalFunParameters.Trajectory(iTraj).PhiDesired.tol      = [-3.5,+3.5]*DEG_2_RAD;
EvalFunParameters.Trajectory(iTraj).IniCond.omegaInitial    = 0*ones(4,1);
EvalFunParameters.Trajectory(iTraj).IniCond.omegaDelay      = zeros(4,1);
EvalFunParameters.Trajectory(iTraj).IniCond.iaInitial       = zeros(4,1);
EvalFunParameters.Trajectory(iTraj).IniCond.iaDelay         = zeros(4,1);
EvalFunParameters.Trajectory(iTraj).IniCond.vPtInitial      = zeros(3,1);
EvalFunParameters.Trajectory(iTraj).IniCond.vPtDelay        = zeros(3,1);
EvalFunParameters.Trajectory(iTraj).IniCond.xPInitial       = [50;0;0];
EvalFunParameters.Trajectory(iTraj).IniCond.xPDelay         = zeros(3,1);
EvalFunParameters.Trajectory(iTraj).IniCond.omegabtInitial  = zeros(3,1);
EvalFunParameters.Trajectory(iTraj).IniCond.omegabtDelay    = zeros(3,1);
EvalFunParameters.Trajectory(iTraj).IniCond.eulerZYXInitial = zeros(3,1);
EvalFunParameters.Trajectory(iTraj).IniCond.eulerZYXDelay   = zeros(3,1);
EvalFunParameters.Trajectory(iTraj).maxViolationX           = 1.5;
EvalFunParameters.Trajectory(iTraj).maxViolationY           = 1.5;
EvalFunParameters.Trajectory(iTraj).maxViolationZ           = 2;
EvalFunParameters.Trajectory(iTraj).maxViolationPsi         = 0.3;
EvalFunParameters.Trajectory(iTraj).maxViolationTheta       = 0.3;
EvalFunParameters.Trajectory(iTraj).maxViolationPhi         = 0.3;
EvalFunParameters.Trajectory(iTraj).violationFactorX        = 3;
EvalFunParameters.Trajectory(iTraj).violationFactorY        = 3;
EvalFunParameters.Trajectory(iTraj).violationFactorZ        = 5;
EvalFunParameters.Trajectory(iTraj).violationFactorPsi      = 2;
EvalFunParameters.Trajectory(iTraj).violationFactorTheta    = 2;
EvalFunParameters.Trajectory(iTraj).violationFactorPhi      = 2;
EvalFunParameters.Trajectory(iTraj).violationTimeThresholdX = 1.0;
EvalFunParameters.Trajectory(iTraj).violationTimeThresholdY = 1.0;
EvalFunParameters.Trajectory(iTraj).violationTimeThresholdZ = 5.0;
EvalFunParameters.Trajectory(iTraj).violationTimeThresholdPsi   = 0.25;
EvalFunParameters.Trajectory(iTraj).violationTimeThresholdTheta = 0.25;
EvalFunParameters.Trajectory(iTraj).violationTimeThresholdPhi   = 0.25;

%% Trajectory 11 - zDesired - zInitial = 0 m - xInitial = 0 m - yInitial = 50 m

iTraj = 11;
nPoints = 1000;
trajectoryType = 'Linear';
ts      = 0;   % Start time (s)
qs      = 0;   % Start position (m)
tf      = 15;  % Finish time (s)
qf      = 0;   % Finish position (m)
[zDesiredTime, zDesired]  = trajectory_generation(nPoints, trajectoryType, ...
    ts, qs, tf, qf);
EvalFunParameters.Trajectory(iTraj).XDesired.t          = zDesiredTime;
EvalFunParameters.Trajectory(iTraj).XDesired.val        = 0*ones(1,nPoints);
EvalFunParameters.Trajectory(iTraj).XDesired.tol        = [-30,+30]*MM_2_M;
EvalFunParameters.Trajectory(iTraj).YDesired.t          = zDesiredTime;
EvalFunParameters.Trajectory(iTraj).YDesired.val        = 50*ones(1,nPoints);
EvalFunParameters.Trajectory(iTraj).YDesired.tol        = [-30,+30]*MM_2_M;
EvalFunParameters.Trajectory(iTraj).ZDesired.t          = zDesiredTime;
EvalFunParameters.Trajectory(iTraj).ZDesired.val        = zDesired;
EvalFunParameters.Trajectory(iTraj).ZDesired.tol        = [-30,+30]*MM_2_M;
EvalFunParameters.Trajectory(iTraj).PsiDesired.t        = zDesiredTime;
EvalFunParameters.Trajectory(iTraj).PsiDesired.val      = zeros(1,nPoints);
EvalFunParameters.Trajectory(iTraj).PsiDesired.tol      = [-3.5,+3.5]*DEG_2_RAD;
EvalFunParameters.Trajectory(iTraj).ThetaDesired.t      = zDesiredTime;
EvalFunParameters.Trajectory(iTraj).ThetaDesired.val    = zeros(1,nPoints);
EvalFunParameters.Trajectory(iTraj).ThetaDesired.tol    = [-3.5,+3.5]*DEG_2_RAD;
EvalFunParameters.Trajectory(iTraj).PhiDesired.t        = zDesiredTime;
EvalFunParameters.Trajectory(iTraj).PhiDesired.val      = zeros(1,nPoints);
EvalFunParameters.Trajectory(iTraj).PhiDesired.tol      = [-3.5,+3.5]*DEG_2_RAD;
EvalFunParameters.Trajectory(iTraj).IniCond.omegaInitial    = 0*ones(4,1);
EvalFunParameters.Trajectory(iTraj).IniCond.omegaDelay      = zeros(4,1);
EvalFunParameters.Trajectory(iTraj).IniCond.iaInitial       = zeros(4,1);
EvalFunParameters.Trajectory(iTraj).IniCond.iaDelay         = zeros(4,1);
EvalFunParameters.Trajectory(iTraj).IniCond.vPtInitial      = zeros(3,1);
EvalFunParameters.Trajectory(iTraj).IniCond.vPtDelay        = zeros(3,1);
EvalFunParameters.Trajectory(iTraj).IniCond.xPInitial       = [0;50;0];
EvalFunParameters.Trajectory(iTraj).IniCond.xPDelay         = zeros(3,1);
EvalFunParameters.Trajectory(iTraj).IniCond.omegabtInitial  = zeros(3,1);
EvalFunParameters.Trajectory(iTraj).IniCond.omegabtDelay    = zeros(3,1);
EvalFunParameters.Trajectory(iTraj).IniCond.eulerZYXInitial = zeros(3,1);
EvalFunParameters.Trajectory(iTraj).IniCond.eulerZYXDelay   = zeros(3,1);
EvalFunParameters.Trajectory(iTraj).maxViolationX           = 1.5;
EvalFunParameters.Trajectory(iTraj).maxViolationY           = 1.5;
EvalFunParameters.Trajectory(iTraj).maxViolationZ           = 2;
EvalFunParameters.Trajectory(iTraj).maxViolationPsi         = 0.3;
EvalFunParameters.Trajectory(iTraj).maxViolationTheta       = 0.3;
EvalFunParameters.Trajectory(iTraj).maxViolationPhi         = 0.3;
EvalFunParameters.Trajectory(iTraj).violationFactorX        = 3;
EvalFunParameters.Trajectory(iTraj).violationFactorY        = 3;
EvalFunParameters.Trajectory(iTraj).violationFactorZ        = 5;
EvalFunParameters.Trajectory(iTraj).violationFactorPsi      = 2;
EvalFunParameters.Trajectory(iTraj).violationFactorTheta    = 2;
EvalFunParameters.Trajectory(iTraj).violationFactorPhi      = 2;
EvalFunParameters.Trajectory(iTraj).violationTimeThresholdX = 1.0;
EvalFunParameters.Trajectory(iTraj).violationTimeThresholdY = 1.0;
EvalFunParameters.Trajectory(iTraj).violationTimeThresholdZ = 5.0;
EvalFunParameters.Trajectory(iTraj).violationTimeThresholdPsi   = 0.25;
EvalFunParameters.Trajectory(iTraj).violationTimeThresholdTheta = 0.25;
EvalFunParameters.Trajectory(iTraj).violationTimeThresholdPhi   = 0.25;

%% Trajectory 12 - zDesired - zInitial = 0 m - xInitial = -50 m - yInitial = 0 m

iTraj = 12;
nPoints = 1000;
trajectoryType = 'Linear';
ts      = 0;   % Start time (s)
qs      = 0;   % Start position (m)
tf      = 15;  % Finish time (s)
qf      = 0;   % Finish position (m)
[zDesiredTime, zDesired]  = trajectory_generation(nPoints, trajectoryType, ...
    ts, qs, tf, qf);
EvalFunParameters.Trajectory(iTraj).XDesired.t          = zDesiredTime;
EvalFunParameters.Trajectory(iTraj).XDesired.val        = -50*ones(1,nPoints);
EvalFunParameters.Trajectory(iTraj).XDesired.tol        = [-30,+30]*MM_2_M;
EvalFunParameters.Trajectory(iTraj).YDesired.t          = zDesiredTime;
EvalFunParameters.Trajectory(iTraj).YDesired.val        = 0*ones(1,nPoints);
EvalFunParameters.Trajectory(iTraj).YDesired.tol        = [-30,+30]*MM_2_M;
EvalFunParameters.Trajectory(iTraj).ZDesired.t          = zDesiredTime;
EvalFunParameters.Trajectory(iTraj).ZDesired.val        = zDesired;
EvalFunParameters.Trajectory(iTraj).ZDesired.tol        = [-30,+30]*MM_2_M;
EvalFunParameters.Trajectory(iTraj).PsiDesired.t        = zDesiredTime;
EvalFunParameters.Trajectory(iTraj).PsiDesired.val      = zeros(1,nPoints);
EvalFunParameters.Trajectory(iTraj).PsiDesired.tol      = [-3.5,+3.5]*DEG_2_RAD;
EvalFunParameters.Trajectory(iTraj).ThetaDesired.t      = zDesiredTime;
EvalFunParameters.Trajectory(iTraj).ThetaDesired.val    = zeros(1,nPoints);
EvalFunParameters.Trajectory(iTraj).ThetaDesired.tol    = [-3.5,+3.5]*DEG_2_RAD;
EvalFunParameters.Trajectory(iTraj).PhiDesired.t        = zDesiredTime;
EvalFunParameters.Trajectory(iTraj).PhiDesired.val      = zeros(1,nPoints);
EvalFunParameters.Trajectory(iTraj).PhiDesired.tol      = [-3.5,+3.5]*DEG_2_RAD;
EvalFunParameters.Trajectory(iTraj).IniCond.omegaInitial    = 0*ones(4,1);
EvalFunParameters.Trajectory(iTraj).IniCond.omegaDelay      = zeros(4,1);
EvalFunParameters.Trajectory(iTraj).IniCond.iaInitial       = zeros(4,1);
EvalFunParameters.Trajectory(iTraj).IniCond.iaDelay         = zeros(4,1);
EvalFunParameters.Trajectory(iTraj).IniCond.vPtInitial      = zeros(3,1);
EvalFunParameters.Trajectory(iTraj).IniCond.vPtDelay        = zeros(3,1);
EvalFunParameters.Trajectory(iTraj).IniCond.xPInitial       = [-50;0;0];
EvalFunParameters.Trajectory(iTraj).IniCond.xPDelay         = zeros(3,1);
EvalFunParameters.Trajectory(iTraj).IniCond.omegabtInitial  = zeros(3,1);
EvalFunParameters.Trajectory(iTraj).IniCond.omegabtDelay    = zeros(3,1);
EvalFunParameters.Trajectory(iTraj).IniCond.eulerZYXInitial = zeros(3,1);
EvalFunParameters.Trajectory(iTraj).IniCond.eulerZYXDelay   = zeros(3,1);
EvalFunParameters.Trajectory(iTraj).maxViolationX           = 1.5;
EvalFunParameters.Trajectory(iTraj).maxViolationY           = 1.5;
EvalFunParameters.Trajectory(iTraj).maxViolationZ           = 2;
EvalFunParameters.Trajectory(iTraj).maxViolationPsi         = 0.3;
EvalFunParameters.Trajectory(iTraj).maxViolationTheta       = 0.3;
EvalFunParameters.Trajectory(iTraj).maxViolationPhi         = 0.3;
EvalFunParameters.Trajectory(iTraj).violationFactorX        = 3;
EvalFunParameters.Trajectory(iTraj).violationFactorY        = 3;
EvalFunParameters.Trajectory(iTraj).violationFactorZ        = 5;
EvalFunParameters.Trajectory(iTraj).violationFactorPsi      = 2;
EvalFunParameters.Trajectory(iTraj).violationFactorTheta    = 2;
EvalFunParameters.Trajectory(iTraj).violationFactorPhi      = 2;
EvalFunParameters.Trajectory(iTraj).violationTimeThresholdX = 1.0;
EvalFunParameters.Trajectory(iTraj).violationTimeThresholdY = 1.0;
EvalFunParameters.Trajectory(iTraj).violationTimeThresholdZ = 5.0;
EvalFunParameters.Trajectory(iTraj).violationTimeThresholdPsi   = 0.25;
EvalFunParameters.Trajectory(iTraj).violationTimeThresholdTheta = 0.25;
EvalFunParameters.Trajectory(iTraj).violationTimeThresholdPhi   = 0.25;

%% Trajectory 13 - zDesired - zInitial = 0 m - xInitial = 0 m - yInitial = -50 m

iTraj = 13;
nPoints = 1000;
trajectoryType = 'Linear';
ts      = 0;   % Start time (s)
qs      = 0;   % Start position (m)
tf      = 15;  % Finish time (s)
qf      = 0;   % Finish position (m)
[zDesiredTime, zDesired]  = trajectory_generation(nPoints, trajectoryType, ...
    ts, qs, tf, qf);
EvalFunParameters.Trajectory(iTraj).XDesired.t          = zDesiredTime;
EvalFunParameters.Trajectory(iTraj).XDesired.val        = 0*ones(1,nPoints);
EvalFunParameters.Trajectory(iTraj).XDesired.tol        = [-30,+30]*MM_2_M;
EvalFunParameters.Trajectory(iTraj).YDesired.t          = zDesiredTime;
EvalFunParameters.Trajectory(iTraj).YDesired.val        = -50*ones(1,nPoints);
EvalFunParameters.Trajectory(iTraj).YDesired.tol        = [-30,+30]*MM_2_M;
EvalFunParameters.Trajectory(iTraj).ZDesired.t          = zDesiredTime;
EvalFunParameters.Trajectory(iTraj).ZDesired.val        = zDesired;
EvalFunParameters.Trajectory(iTraj).ZDesired.tol        = [-30,+30]*MM_2_M;
EvalFunParameters.Trajectory(iTraj).PsiDesired.t        = zDesiredTime;
EvalFunParameters.Trajectory(iTraj).PsiDesired.val      = zeros(1,nPoints);
EvalFunParameters.Trajectory(iTraj).PsiDesired.tol      = [-3.5,+3.5]*DEG_2_RAD;
EvalFunParameters.Trajectory(iTraj).ThetaDesired.t      = zDesiredTime;
EvalFunParameters.Trajectory(iTraj).ThetaDesired.val    = zeros(1,nPoints);
EvalFunParameters.Trajectory(iTraj).ThetaDesired.tol    = [-3.5,+3.5]*DEG_2_RAD;
EvalFunParameters.Trajectory(iTraj).PhiDesired.t        = zDesiredTime;
EvalFunParameters.Trajectory(iTraj).PhiDesired.val      = zeros(1,nPoints);
EvalFunParameters.Trajectory(iTraj).PhiDesired.tol      = [-3.5,+3.5]*DEG_2_RAD;
EvalFunParameters.Trajectory(iTraj).IniCond.omegaInitial    = 0*ones(4,1);
EvalFunParameters.Trajectory(iTraj).IniCond.omegaDelay      = zeros(4,1);
EvalFunParameters.Trajectory(iTraj).IniCond.iaInitial       = zeros(4,1);
EvalFunParameters.Trajectory(iTraj).IniCond.iaDelay         = zeros(4,1);
EvalFunParameters.Trajectory(iTraj).IniCond.vPtInitial      = zeros(3,1);
EvalFunParameters.Trajectory(iTraj).IniCond.vPtDelay        = zeros(3,1);
EvalFunParameters.Trajectory(iTraj).IniCond.xPInitial       = [0;-50;0];
EvalFunParameters.Trajectory(iTraj).IniCond.xPDelay         = zeros(3,1);
EvalFunParameters.Trajectory(iTraj).IniCond.omegabtInitial  = zeros(3,1);
EvalFunParameters.Trajectory(iTraj).IniCond.omegabtDelay    = zeros(3,1);
EvalFunParameters.Trajectory(iTraj).IniCond.eulerZYXInitial = zeros(3,1);
EvalFunParameters.Trajectory(iTraj).IniCond.eulerZYXDelay   = zeros(3,1);
EvalFunParameters.Trajectory(iTraj).maxViolationX           = 1.5;
EvalFunParameters.Trajectory(iTraj).maxViolationY           = 1.5;
EvalFunParameters.Trajectory(iTraj).maxViolationZ           = 2;
EvalFunParameters.Trajectory(iTraj).maxViolationPsi         = 0.3;
EvalFunParameters.Trajectory(iTraj).maxViolationTheta       = 0.3;
EvalFunParameters.Trajectory(iTraj).maxViolationPhi         = 0.3;
EvalFunParameters.Trajectory(iTraj).violationFactorX        = 3;
EvalFunParameters.Trajectory(iTraj).violationFactorY        = 3;
EvalFunParameters.Trajectory(iTraj).violationFactorZ        = 5;
EvalFunParameters.Trajectory(iTraj).violationFactorPsi      = 2;
EvalFunParameters.Trajectory(iTraj).violationFactorTheta    = 2;
EvalFunParameters.Trajectory(iTraj).violationFactorPhi      = 2;
EvalFunParameters.Trajectory(iTraj).violationTimeThresholdX = 1.0;
EvalFunParameters.Trajectory(iTraj).violationTimeThresholdY = 1.0;
EvalFunParameters.Trajectory(iTraj).violationTimeThresholdZ = 5.0;
EvalFunParameters.Trajectory(iTraj).violationTimeThresholdPsi   = 0.25;
EvalFunParameters.Trajectory(iTraj).violationTimeThresholdTheta = 0.25;
EvalFunParameters.Trajectory(iTraj).violationTimeThresholdPhi   = 0.25;

%% Trajectory 14 - zDesired - zInitial = 0 m - xInitial = 0 m - yInitial = 0 m - psiInitial = 80

iTraj = 14;
nPoints = 1000;
trajectoryType = 'Linear';
ts      = 0;   % Start time (s)
qs      = 0;   % Start position (m)
tf      = 15;  % Finish time (s)
qf      = 0;   % Finish position (m)
[zDesiredTime, zDesired]  = trajectory_generation(nPoints, trajectoryType, ...
    ts, qs, tf, qf);
EvalFunParameters.Trajectory(iTraj).XDesired.t          = zDesiredTime;
EvalFunParameters.Trajectory(iTraj).XDesired.val        = zeros(1,nPoints);
EvalFunParameters.Trajectory(iTraj).XDesired.tol        = [-30,+30]*MM_2_M;
EvalFunParameters.Trajectory(iTraj).YDesired.t          = zDesiredTime;
EvalFunParameters.Trajectory(iTraj).YDesired.val        = zeros(1,nPoints);
EvalFunParameters.Trajectory(iTraj).YDesired.tol        = [-30,+30]*MM_2_M;
EvalFunParameters.Trajectory(iTraj).ZDesired.t          = zDesiredTime;
EvalFunParameters.Trajectory(iTraj).ZDesired.val        = zDesired;
EvalFunParameters.Trajectory(iTraj).ZDesired.tol        = [-30,+30]*MM_2_M;
EvalFunParameters.Trajectory(iTraj).PsiDesired.t        = zDesiredTime;
EvalFunParameters.Trajectory(iTraj).PsiDesired.val      = 80*DEG_2_RAD*ones(1,nPoints);
EvalFunParameters.Trajectory(iTraj).PsiDesired.tol      = [-3.5,+3.5]*DEG_2_RAD;
EvalFunParameters.Trajectory(iTraj).ThetaDesired.t      = zDesiredTime;
EvalFunParameters.Trajectory(iTraj).ThetaDesired.val    = zeros(1,nPoints);
EvalFunParameters.Trajectory(iTraj).ThetaDesired.tol    = [-3.5,+3.5]*DEG_2_RAD;
EvalFunParameters.Trajectory(iTraj).PhiDesired.t        = zDesiredTime;
EvalFunParameters.Trajectory(iTraj).PhiDesired.val      = zeros(1,nPoints);
EvalFunParameters.Trajectory(iTraj).PhiDesired.tol      = [-3.5,+3.5]*DEG_2_RAD;
EvalFunParameters.Trajectory(iTraj).IniCond.omegaInitial    = 0*ones(4,1);
EvalFunParameters.Trajectory(iTraj).IniCond.omegaDelay      = zeros(4,1);
EvalFunParameters.Trajectory(iTraj).IniCond.iaInitial       = zeros(4,1);
EvalFunParameters.Trajectory(iTraj).IniCond.iaDelay         = zeros(4,1);
EvalFunParameters.Trajectory(iTraj).IniCond.vPtInitial      = zeros(3,1);
EvalFunParameters.Trajectory(iTraj).IniCond.vPtDelay        = zeros(3,1);
EvalFunParameters.Trajectory(iTraj).IniCond.xPInitial       = [0;0;0];
EvalFunParameters.Trajectory(iTraj).IniCond.xPDelay         = zeros(3,1);
EvalFunParameters.Trajectory(iTraj).IniCond.omegabtInitial  = zeros(3,1);
EvalFunParameters.Trajectory(iTraj).IniCond.omegabtDelay    = zeros(3,1);
EvalFunParameters.Trajectory(iTraj).IniCond.eulerZYXInitial = [80*DEG_2_RAD;0;0];
EvalFunParameters.Trajectory(iTraj).IniCond.eulerZYXDelay   = zeros(3,1);
EvalFunParameters.Trajectory(iTraj).maxViolationX           = 1.5;
EvalFunParameters.Trajectory(iTraj).maxViolationY           = 1.5;
EvalFunParameters.Trajectory(iTraj).maxViolationZ           = 2;
EvalFunParameters.Trajectory(iTraj).maxViolationPsi         = 0.3;
EvalFunParameters.Trajectory(iTraj).maxViolationTheta       = 0.3;
EvalFunParameters.Trajectory(iTraj).maxViolationPhi         = 0.3;
EvalFunParameters.Trajectory(iTraj).violationFactorX        = 3;
EvalFunParameters.Trajectory(iTraj).violationFactorY        = 3;
EvalFunParameters.Trajectory(iTraj).violationFactorZ        = 5;
EvalFunParameters.Trajectory(iTraj).violationFactorPsi      = 2;
EvalFunParameters.Trajectory(iTraj).violationFactorTheta    = 2;
EvalFunParameters.Trajectory(iTraj).violationFactorPhi      = 2;
EvalFunParameters.Trajectory(iTraj).violationTimeThresholdX = 1.0;
EvalFunParameters.Trajectory(iTraj).violationTimeThresholdY = 1.0;
EvalFunParameters.Trajectory(iTraj).violationTimeThresholdZ = 5.0;
EvalFunParameters.Trajectory(iTraj).violationTimeThresholdPsi   = 0.25;
EvalFunParameters.Trajectory(iTraj).violationTimeThresholdTheta = 0.25;
EvalFunParameters.Trajectory(iTraj).violationTimeThresholdPhi   = 0.25;

%% Trajectory 15 - zDesired - zInitial = 0 m - xInitial = 0 m - yInitial = 0 m - psiInitial = 160

iTraj = 15;
nPoints = 1000;
trajectoryType = 'Linear';
ts      = 0;   % Start time (s)
qs      = 0;   % Start position (m)
tf      = 15;  % Finish time (s)
qf      = 0;   % Finish position (m)
[zDesiredTime, zDesired]  = trajectory_generation(nPoints, trajectoryType, ...
    ts, qs, tf, qf);
EvalFunParameters.Trajectory(iTraj).XDesired.t          = zDesiredTime;
EvalFunParameters.Trajectory(iTraj).XDesired.val        = zeros(1,nPoints);
EvalFunParameters.Trajectory(iTraj).XDesired.tol        = [-30,+30]*MM_2_M;
EvalFunParameters.Trajectory(iTraj).YDesired.t          = zDesiredTime;
EvalFunParameters.Trajectory(iTraj).YDesired.val        = zeros(1,nPoints);
EvalFunParameters.Trajectory(iTraj).YDesired.tol        = [-30,+30]*MM_2_M;
EvalFunParameters.Trajectory(iTraj).ZDesired.t          = zDesiredTime;
EvalFunParameters.Trajectory(iTraj).ZDesired.val        = zDesired;
EvalFunParameters.Trajectory(iTraj).ZDesired.tol        = [-30,+30]*MM_2_M;
EvalFunParameters.Trajectory(iTraj).PsiDesired.t        = zDesiredTime;
EvalFunParameters.Trajectory(iTraj).PsiDesired.val      = 160*DEG_2_RAD*ones(1,nPoints);
EvalFunParameters.Trajectory(iTraj).PsiDesired.tol      = [-3.5,+3.5]*DEG_2_RAD;
EvalFunParameters.Trajectory(iTraj).ThetaDesired.t      = zDesiredTime;
EvalFunParameters.Trajectory(iTraj).ThetaDesired.val    = zeros(1,nPoints);
EvalFunParameters.Trajectory(iTraj).ThetaDesired.tol    = [-3.5,+3.5]*DEG_2_RAD;
EvalFunParameters.Trajectory(iTraj).PhiDesired.t        = zDesiredTime;
EvalFunParameters.Trajectory(iTraj).PhiDesired.val      = zeros(1,nPoints);
EvalFunParameters.Trajectory(iTraj).PhiDesired.tol      = [-3.5,+3.5]*DEG_2_RAD;
EvalFunParameters.Trajectory(iTraj).IniCond.omegaInitial    = 0*ones(4,1);
EvalFunParameters.Trajectory(iTraj).IniCond.omegaDelay      = zeros(4,1);
EvalFunParameters.Trajectory(iTraj).IniCond.iaInitial       = zeros(4,1);
EvalFunParameters.Trajectory(iTraj).IniCond.iaDelay         = zeros(4,1);
EvalFunParameters.Trajectory(iTraj).IniCond.vPtInitial      = zeros(3,1);
EvalFunParameters.Trajectory(iTraj).IniCond.vPtDelay        = zeros(3,1);
EvalFunParameters.Trajectory(iTraj).IniCond.xPInitial       = [0;0;0];
EvalFunParameters.Trajectory(iTraj).IniCond.xPDelay         = zeros(3,1);
EvalFunParameters.Trajectory(iTraj).IniCond.omegabtInitial  = zeros(3,1);
EvalFunParameters.Trajectory(iTraj).IniCond.omegabtDelay    = zeros(3,1);
EvalFunParameters.Trajectory(iTraj).IniCond.eulerZYXInitial = [160*DEG_2_RAD;0;0];
EvalFunParameters.Trajectory(iTraj).IniCond.eulerZYXDelay   = zeros(3,1);
EvalFunParameters.Trajectory(iTraj).maxViolationX           = 1.5;
EvalFunParameters.Trajectory(iTraj).maxViolationY           = 1.5;
EvalFunParameters.Trajectory(iTraj).maxViolationZ           = 2;
EvalFunParameters.Trajectory(iTraj).maxViolationPsi         = 0.3;
EvalFunParameters.Trajectory(iTraj).maxViolationTheta       = 0.3;
EvalFunParameters.Trajectory(iTraj).maxViolationPhi         = 0.3;
EvalFunParameters.Trajectory(iTraj).violationFactorX        = 3;
EvalFunParameters.Trajectory(iTraj).violationFactorY        = 3;
EvalFunParameters.Trajectory(iTraj).violationFactorZ        = 5;
EvalFunParameters.Trajectory(iTraj).violationFactorPsi      = 2;
EvalFunParameters.Trajectory(iTraj).violationFactorTheta    = 2;
EvalFunParameters.Trajectory(iTraj).violationFactorPhi      = 2;
EvalFunParameters.Trajectory(iTraj).violationTimeThresholdX = 1.0;
EvalFunParameters.Trajectory(iTraj).violationTimeThresholdY = 1.0;
EvalFunParameters.Trajectory(iTraj).violationTimeThresholdZ = 5.0;
EvalFunParameters.Trajectory(iTraj).violationTimeThresholdPsi   = 0.25;
EvalFunParameters.Trajectory(iTraj).violationTimeThresholdTheta = 0.25;
EvalFunParameters.Trajectory(iTraj).violationTimeThresholdPhi   = 0.25;

%% Trajectory 16 - zDesired - zInitial = 0 m - xInitial = 0 m - yInitial = 0 m - psiInitial = -80

iTraj = 16;
nPoints = 1000;
trajectoryType = 'Linear';
ts      = 0;   % Start time (s)
qs      = 0;   % Start position (m)
tf      = 15;  % Finish time (s)
qf      = 0;   % Finish position (m)
[zDesiredTime, zDesired]  = trajectory_generation(nPoints, trajectoryType, ...
    ts, qs, tf, qf);
EvalFunParameters.Trajectory(iTraj).XDesired.t          = zDesiredTime;
EvalFunParameters.Trajectory(iTraj).XDesired.val        = zeros(1,nPoints);
EvalFunParameters.Trajectory(iTraj).XDesired.tol        = [-30,+30]*MM_2_M;
EvalFunParameters.Trajectory(iTraj).YDesired.t          = zDesiredTime;
EvalFunParameters.Trajectory(iTraj).YDesired.val        = zeros(1,nPoints);
EvalFunParameters.Trajectory(iTraj).YDesired.tol        = [-30,+30]*MM_2_M;
EvalFunParameters.Trajectory(iTraj).ZDesired.t          = zDesiredTime;
EvalFunParameters.Trajectory(iTraj).ZDesired.val        = zDesired;
EvalFunParameters.Trajectory(iTraj).ZDesired.tol        = [-30,+30]*MM_2_M;
EvalFunParameters.Trajectory(iTraj).PsiDesired.t        = zDesiredTime;
EvalFunParameters.Trajectory(iTraj).PsiDesired.val      = -80*DEG_2_RAD*ones(1,nPoints);
EvalFunParameters.Trajectory(iTraj).PsiDesired.tol      = [-3.5,+3.5]*DEG_2_RAD;
EvalFunParameters.Trajectory(iTraj).ThetaDesired.t      = zDesiredTime;
EvalFunParameters.Trajectory(iTraj).ThetaDesired.val    = zeros(1,nPoints);
EvalFunParameters.Trajectory(iTraj).ThetaDesired.tol    = [-3.5,+3.5]*DEG_2_RAD;
EvalFunParameters.Trajectory(iTraj).PhiDesired.t        = zDesiredTime;
EvalFunParameters.Trajectory(iTraj).PhiDesired.val      = zeros(1,nPoints);
EvalFunParameters.Trajectory(iTraj).PhiDesired.tol      = [-3.5,+3.5]*DEG_2_RAD;
EvalFunParameters.Trajectory(iTraj).IniCond.omegaInitial    = 0*ones(4,1);
EvalFunParameters.Trajectory(iTraj).IniCond.omegaDelay      = zeros(4,1);
EvalFunParameters.Trajectory(iTraj).IniCond.iaInitial       = zeros(4,1);
EvalFunParameters.Trajectory(iTraj).IniCond.iaDelay         = zeros(4,1);
EvalFunParameters.Trajectory(iTraj).IniCond.vPtInitial      = zeros(3,1);
EvalFunParameters.Trajectory(iTraj).IniCond.vPtDelay        = zeros(3,1);
EvalFunParameters.Trajectory(iTraj).IniCond.xPInitial       = [0;0;0];
EvalFunParameters.Trajectory(iTraj).IniCond.xPDelay         = zeros(3,1);
EvalFunParameters.Trajectory(iTraj).IniCond.omegabtInitial  = zeros(3,1);
EvalFunParameters.Trajectory(iTraj).IniCond.omegabtDelay    = zeros(3,1);
EvalFunParameters.Trajectory(iTraj).IniCond.eulerZYXInitial = [-80*DEG_2_RAD;0;0];
EvalFunParameters.Trajectory(iTraj).IniCond.eulerZYXDelay   = zeros(3,1);
EvalFunParameters.Trajectory(iTraj).maxViolationX           = 1.5;
EvalFunParameters.Trajectory(iTraj).maxViolationY           = 1.5;
EvalFunParameters.Trajectory(iTraj).maxViolationZ           = 2;
EvalFunParameters.Trajectory(iTraj).maxViolationPsi         = 0.3;
EvalFunParameters.Trajectory(iTraj).maxViolationTheta       = 0.3;
EvalFunParameters.Trajectory(iTraj).maxViolationPhi         = 0.3;
EvalFunParameters.Trajectory(iTraj).violationFactorX        = 3;
EvalFunParameters.Trajectory(iTraj).violationFactorY        = 3;
EvalFunParameters.Trajectory(iTraj).violationFactorZ        = 5;
EvalFunParameters.Trajectory(iTraj).violationFactorPsi      = 2;
EvalFunParameters.Trajectory(iTraj).violationFactorTheta    = 2;
EvalFunParameters.Trajectory(iTraj).violationFactorPhi      = 2;
EvalFunParameters.Trajectory(iTraj).violationTimeThresholdX = 1.0;
EvalFunParameters.Trajectory(iTraj).violationTimeThresholdY = 1.0;
EvalFunParameters.Trajectory(iTraj).violationTimeThresholdZ = 5.0;
EvalFunParameters.Trajectory(iTraj).violationTimeThresholdPsi   = 0.25;
EvalFunParameters.Trajectory(iTraj).violationTimeThresholdTheta = 0.25;
EvalFunParameters.Trajectory(iTraj).violationTimeThresholdPhi   = 0.25;

%% Trajectory 17 - zDesired - zInitial = 0 m - xInitial = 0 m - yInitial = 0 m - psiInitial = -160

iTraj = 17;
nPoints = 1000;
trajectoryType = 'Linear';
ts      = 0;   % Start time (s)
qs      = 0;   % Start position (m)
tf      = 15;  % Finish time (s)
qf      = 0;   % Finish position (m)
[zDesiredTime, zDesired]  = trajectory_generation(nPoints, trajectoryType, ...
    ts, qs, tf, qf);
EvalFunParameters.Trajectory(iTraj).XDesired.t          = zDesiredTime;
EvalFunParameters.Trajectory(iTraj).XDesired.val        = zeros(1,nPoints);
EvalFunParameters.Trajectory(iTraj).XDesired.tol        = [-30,+30]*MM_2_M;
EvalFunParameters.Trajectory(iTraj).YDesired.t          = zDesiredTime;
EvalFunParameters.Trajectory(iTraj).YDesired.val        = zeros(1,nPoints);
EvalFunParameters.Trajectory(iTraj).YDesired.tol        = [-30,+30]*MM_2_M;
EvalFunParameters.Trajectory(iTraj).ZDesired.t          = zDesiredTime;
EvalFunParameters.Trajectory(iTraj).ZDesired.val        = zDesired;
EvalFunParameters.Trajectory(iTraj).ZDesired.tol        = [-30,+30]*MM_2_M;
EvalFunParameters.Trajectory(iTraj).PsiDesired.t        = zDesiredTime;
EvalFunParameters.Trajectory(iTraj).PsiDesired.val      = -160*DEG_2_RAD*ones(1,nPoints);
EvalFunParameters.Trajectory(iTraj).PsiDesired.tol      = [-3.5,+3.5]*DEG_2_RAD;
EvalFunParameters.Trajectory(iTraj).ThetaDesired.t      = zDesiredTime;
EvalFunParameters.Trajectory(iTraj).ThetaDesired.val    = zeros(1,nPoints);
EvalFunParameters.Trajectory(iTraj).ThetaDesired.tol    = [-3.5,+3.5]*DEG_2_RAD;
EvalFunParameters.Trajectory(iTraj).PhiDesired.t        = zDesiredTime;
EvalFunParameters.Trajectory(iTraj).PhiDesired.val      = zeros(1,nPoints);
EvalFunParameters.Trajectory(iTraj).PhiDesired.tol      = [-3.5,+3.5]*DEG_2_RAD;
EvalFunParameters.Trajectory(iTraj).IniCond.omegaInitial    = 0*ones(4,1);
EvalFunParameters.Trajectory(iTraj).IniCond.omegaDelay      = zeros(4,1);
EvalFunParameters.Trajectory(iTraj).IniCond.iaInitial       = zeros(4,1);
EvalFunParameters.Trajectory(iTraj).IniCond.iaDelay         = zeros(4,1);
EvalFunParameters.Trajectory(iTraj).IniCond.vPtInitial      = zeros(3,1);
EvalFunParameters.Trajectory(iTraj).IniCond.vPtDelay        = zeros(3,1);
EvalFunParameters.Trajectory(iTraj).IniCond.xPInitial       = [0;0;0];
EvalFunParameters.Trajectory(iTraj).IniCond.xPDelay         = zeros(3,1);
EvalFunParameters.Trajectory(iTraj).IniCond.omegabtInitial  = zeros(3,1);
EvalFunParameters.Trajectory(iTraj).IniCond.omegabtDelay    = zeros(3,1);
EvalFunParameters.Trajectory(iTraj).IniCond.eulerZYXInitial = [-160*DEG_2_RAD;0;0];
EvalFunParameters.Trajectory(iTraj).IniCond.eulerZYXDelay   = zeros(3,1);
EvalFunParameters.Trajectory(iTraj).maxViolationX           = 1.5;
EvalFunParameters.Trajectory(iTraj).maxViolationY           = 1.5;
EvalFunParameters.Trajectory(iTraj).maxViolationZ           = 2;
EvalFunParameters.Trajectory(iTraj).maxViolationPsi         = 0.3;
EvalFunParameters.Trajectory(iTraj).maxViolationTheta       = 0.3;
EvalFunParameters.Trajectory(iTraj).maxViolationPhi         = 0.3;
EvalFunParameters.Trajectory(iTraj).violationFactorX        = 3;
EvalFunParameters.Trajectory(iTraj).violationFactorY        = 3;
EvalFunParameters.Trajectory(iTraj).violationFactorZ        = 5;
EvalFunParameters.Trajectory(iTraj).violationFactorPsi      = 2;
EvalFunParameters.Trajectory(iTraj).violationFactorTheta    = 2;
EvalFunParameters.Trajectory(iTraj).violationFactorPhi      = 2;
EvalFunParameters.Trajectory(iTraj).violationTimeThresholdX = 1.0;
EvalFunParameters.Trajectory(iTraj).violationTimeThresholdY = 1.0;
EvalFunParameters.Trajectory(iTraj).violationTimeThresholdZ = 5.0;
EvalFunParameters.Trajectory(iTraj).violationTimeThresholdPsi   = 0.25;
EvalFunParameters.Trajectory(iTraj).violationTimeThresholdTheta = 0.25;
EvalFunParameters.Trajectory(iTraj).violationTimeThresholdPhi   = 0.25;

%% Trajectory 18 - xDesired

iTraj = 18;
nPoints = 1000;
trajectoryType = 'Poly3';
ts      = 0;  % Start time (s)
qs      = 0;  % Start position (m)
qsDot   = 0;  % Start position (m)
tf      = 5;  % Finish time (s)
qf      = 1;  % Finish position (m)
qfDot   = 0;  % Finish position (m)
[xDesiredTime, xDesired]  = trajectory_generation(nPoints, trajectoryType, ...
    ts, qs, qsDot, tf, qf, qfDot);
EvalFunParameters.Trajectory(iTraj).XDesired.t          = xDesiredTime;
EvalFunParameters.Trajectory(iTraj).XDesired.val        = xDesired;
EvalFunParameters.Trajectory(iTraj).XDesired.tol        = [-80,+80]*MM_2_M;
EvalFunParameters.Trajectory(iTraj).YDesired.t          = xDesiredTime;
EvalFunParameters.Trajectory(iTraj).YDesired.val        = zeros(1,nPoints);
EvalFunParameters.Trajectory(iTraj).YDesired.tol        = [-30,+30]*MM_2_M;
EvalFunParameters.Trajectory(iTraj).ZDesired.t          = xDesiredTime;
EvalFunParameters.Trajectory(iTraj).ZDesired.val        = zeros(1,nPoints);
EvalFunParameters.Trajectory(iTraj).ZDesired.tol        = [-60,+60]*MM_2_M;
EvalFunParameters.Trajectory(iTraj).PsiDesired.t        = xDesiredTime;
EvalFunParameters.Trajectory(iTraj).PsiDesired.val      = zeros(1,nPoints);
EvalFunParameters.Trajectory(iTraj).PsiDesired.tol      = [-5.0,+5.0]*DEG_2_RAD;
EvalFunParameters.Trajectory(iTraj).ThetaDesired.t      = xDesiredTime;
EvalFunParameters.Trajectory(iTraj).ThetaDesired.val    = zeros(1,nPoints);
EvalFunParameters.Trajectory(iTraj).ThetaDesired.tol    = [-7.0,+7.0]*DEG_2_RAD;
EvalFunParameters.Trajectory(iTraj).PhiDesired.t        = xDesiredTime;
EvalFunParameters.Trajectory(iTraj).PhiDesired.val      = zeros(1,nPoints);
EvalFunParameters.Trajectory(iTraj).PhiDesired.tol      = [-5.0,+5.0]*DEG_2_RAD;
EvalFunParameters.Trajectory(iTraj).IniCond.omegaInitial    = 0*ones(4,1);
EvalFunParameters.Trajectory(iTraj).IniCond.omegaDelay      = zeros(4,1);
EvalFunParameters.Trajectory(iTraj).IniCond.iaInitial       = zeros(4,1);
EvalFunParameters.Trajectory(iTraj).IniCond.iaDelay         = zeros(4,1);
EvalFunParameters.Trajectory(iTraj).IniCond.vPtInitial      = zeros(3,1);
EvalFunParameters.Trajectory(iTraj).IniCond.vPtDelay        = zeros(3,1);
EvalFunParameters.Trajectory(iTraj).IniCond.xPInitial       = [0;0;90];
EvalFunParameters.Trajectory(iTraj).IniCond.xPDelay         = zeros(3,1);
EvalFunParameters.Trajectory(iTraj).IniCond.omegabtInitial  = zeros(3,1);
EvalFunParameters.Trajectory(iTraj).IniCond.omegabtDelay    = zeros(3,1);
EvalFunParameters.Trajectory(iTraj).IniCond.eulerZYXInitial = zeros(3,1);
EvalFunParameters.Trajectory(iTraj).IniCond.eulerZYXDelay   = zeros(3,1);
EvalFunParameters.Trajectory(iTraj).maxViolationX           = 1.5;
EvalFunParameters.Trajectory(iTraj).maxViolationY           = 1.5;
EvalFunParameters.Trajectory(iTraj).maxViolationZ           = 2;
EvalFunParameters.Trajectory(iTraj).maxViolationPsi         = 0.3;
EvalFunParameters.Trajectory(iTraj).maxViolationTheta       = 0.3;
EvalFunParameters.Trajectory(iTraj).maxViolationPhi         = 0.3;
EvalFunParameters.Trajectory(iTraj).violationFactorX        = 5;
EvalFunParameters.Trajectory(iTraj).violationFactorY        = 5;
EvalFunParameters.Trajectory(iTraj).violationFactorZ        = 5;
EvalFunParameters.Trajectory(iTraj).violationFactorPsi      = 5;
EvalFunParameters.Trajectory(iTraj).violationFactorTheta    = 2;
EvalFunParameters.Trajectory(iTraj).violationFactorPhi      = 2;
EvalFunParameters.Trajectory(iTraj).violationTimeThresholdX = 3.0;
EvalFunParameters.Trajectory(iTraj).violationTimeThresholdY = 3.0;
EvalFunParameters.Trajectory(iTraj).violationTimeThresholdZ = 5.0;
EvalFunParameters.Trajectory(iTraj).violationTimeThresholdPsi   = 0.5;
EvalFunParameters.Trajectory(iTraj).violationTimeThresholdTheta = 0.5;
EvalFunParameters.Trajectory(iTraj).violationTimeThresholdPhi   = 0.5;

%% Trajectory selection

EvalFunParameters.Trajectory = EvalFunParameters.Trajectory(iTrajSelection);
